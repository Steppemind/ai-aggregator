import { NextRequest, NextResponse } from 'next/server'
import fs from 'fs'
import path from 'path'

// –†–∞–∑—Ä–µ—à–∞–µ–º Edge Runtime –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Node API
export const dynamic = 'force-dynamic'

export async function POST(req: NextRequest) {
  try {
    const body = await req.json()
    const filePath = body.path
    const content = body.content

    console.log('üì• –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞:', filePath)

    if (!filePath || typeof filePath !== 'string') {
      return NextResponse.json({ error: '–ü–æ–ª–µ "path" –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ —Å—Ç—Ä–æ–∫–∞' }, { status: 400 })
    }

    if (typeof content !== 'string') {
      return NextResponse.json({ error: '–ü–æ–ª–µ "content" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π' }, { status: 400 })
    }

    const absolutePath = path.join(process.cwd(), filePath)
    const dir = path.dirname(absolutePath)

    // –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –Ω–µ—Ç
    fs.mkdirSync(dir, { recursive: true })

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
    fs.writeFileSync(absolutePath, content, 'utf8')

    console.log(`‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: ${absolutePath}`)

    return NextResponse.json({ status: 'success', saved: filePath })
  } catch (err: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:', err)
    return NextResponse.json({ error: err.message || 'Internal server error' }, { status: 500 })
  }
}
